{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/graph-data": {
            "get": {
                "description": "For testing purposes, this endpoint returns all processed graph data in JSON format",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Graph Data"
                ],
                "summary": "Get All Processed Graph Data",
                "responses": {
                    "200": {
                        "description": "Array element data in JSON format",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/scraper.Element"
                            }
                        }
                    },
                    "500": {
                        "description": "Error if graph data is not ready or invalid",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/solve-recipe": {
            "get": {
                "description": "Finds recipes to create the specified element using either DFS or BFS algorithm",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recipes"
                ],
                "summary": "Get recipes for an element",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Element name to find recipes for",
                        "name": "element",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "dfs",
                            "bfs"
                        ],
                        "type": "string",
                        "default": "dfs",
                        "description": "Search algorithm (dfs or bfs)",
                        "name": "algorithm",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "description": "Number of recipes to find",
                        "name": "count",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "shortest",
                        "description": "Search mode",
                        "name": "mode",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/api.RecipeSolution"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.RecipePath": {
            "type": "object",
            "properties": {
                "dibuatDari": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/api.RecipePath"
                        }
                    }
                },
                "isBaseElement": {
                    "type": "boolean"
                },
                "namaElemen": {
                    "type": "string"
                }
            }
        },
        "api.RecipeSolution": {
            "type": "object",
            "properties": {
                "elementName": {
                    "type": "string"
                },
                "found": {
                    "type": "boolean"
                },
                "nodesVisited": {
                    "type": "integer"
                },
                "recipes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.RecipePath"
                    }
                },
                "searchParams": {
                    "$ref": "#/definitions/api.SearchParams"
                },
                "searchTimeMs": {
                    "type": "number"
                }
            }
        },
        "api.SearchParams": {
            "type": "object",
            "properties": {
                "algorithm": {
                    "type": "string"
                },
                "count": {
                    "type": "integer"
                },
                "mode": {
                    "type": "string"
                }
            }
        },
        "scraper.Element": {
            "type": "object",
            "properties": {
                "CanMake": {
                    "description": "list of element IDs that can be made using this element as an ingredient",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "FromPair": {
                    "description": "list of ingredient ID pairs that can create this element",
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "Id": {
                    "description": "unique identifier for the element",
                    "type": "integer"
                },
                "Name": {
                    "description": "name of the element",
                    "type": "string"
                },
                "Tier": {
                    "description": "tier of the element, 0 for base elements",
                    "type": "integer"
                }
            }
        }
    }
}